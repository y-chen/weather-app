{
	"env": {
		"browser": true,
		"es6": true,
		"jest": true,
		"node": true
	},
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/eslint-recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:@typescript-eslint/recommended-requiring-type-checking",
		"prettier",
		"prettier/@typescript-eslint",
		"plugin:sonarjs/recommended",
		"plugin:security/recommended"
	],
	"ignorePatterns": ["/node_modules", "/.tmp", "/.data", "/.dist", "/.documentation", "polyfills.ts"],
	"overrides": [
		{
			"files": ["*.component.html"],
			"parser": "@angular-eslint/template-parser",
			"plugins": [
				"@angular-eslint/template",
				"@angular-eslint/eslint-plugin",
				"@angular-eslint/eslint-plugin-template",
				"@angular-eslint"
			],
			"rules": {
				"@angular-eslint/component-class-suffix": "error",
				"@angular-eslint/component-selector": [
					"error",
					{
						"prefix": "app",
						"style": "kebab-case",
						"type": "element"
					}
				],
				"@angular-eslint/contextual-lifecycle": "error",
				"@angular-eslint/directive-class-suffix": "error",
				"@angular-eslint/directive-selector": [
					"error",
					{
						"prefix": "app",
						"style": "camelCase",
						"type": "attribute"
					}
				],
				"@angular-eslint/no-conflicting-lifecycle": "error",
				"@angular-eslint/no-host-metadata-property": "error",
				"@angular-eslint/no-input-rename": "error",
				"@angular-eslint/no-inputs-metadata-property": "error",
				"@angular-eslint/no-output-native": "error",
				"@angular-eslint/no-output-on-prefix": "error",
				"@angular-eslint/no-output-rename": "error",
				"@angular-eslint/no-outputs-metadata-property": "error",
				"@angular-eslint/template/banana-in-box": "error",
				"@angular-eslint/template/no-negated-async": "error",
				"@angular-eslint/use-component-view-encapsulation": "error",
				"@angular-eslint/use-lifecycle-interface": "error",
				"@angular-eslint/use-pipe-decorator": "error",
				"@angular-eslint/use-pipe-transform-interface": "error"
			}
		}
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": "tsconfig.json",
		"sourceType": "module"
	},
	"plugins": [
		"eslint-plugin-import",
		"eslint-plugin-jsdoc",
		"eslint-plugin-prefer-arrow",
		"@typescript-eslint",
		"@typescript-eslint/tslint",
		"sonarjs",
		"security",
		"eslint-plugin-html"
	],
	"root": true,
	"rules": {
		"@typescript-eslint/adjacent-overload-signatures": "error",
		"@typescript-eslint/array-type": "off",
		"@typescript-eslint/ban-ts-comment": "error",
		"@typescript-eslint/ban-types": [
			"error",
			{
				"types": {
					"Boolean": {
						"message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
					},
					"Function": {
						"message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
					},
					"Number": {
						"message": "Avoid using the `Number` type. Did you mean `number`?"
					},
					"Object": {
						"message": "Avoid using the `Object` type. Did you mean `object`?"
					},
					"String": {
						"message": "Avoid using the `String` type. Did you mean `string`?"
					},
					"Symbol": {
						"message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
					}
				}
			}
		],
		"@typescript-eslint/brace-style": "off",
		"@typescript-eslint/comma-dangle": "off",
		"@typescript-eslint/comma-spacing": "off",
		"@typescript-eslint/consistent-type-assertions": "error",
		"@typescript-eslint/consistent-type-definitions": "error",
		"@typescript-eslint/dot-notation": "off",
		"@typescript-eslint/explicit-function-return-type": "off",
		"@typescript-eslint/explicit-member-accessibility": [
			"off",
			{
				"accessibility": "explicit"
			}
		],
		"@typescript-eslint/explicit-module-boundary-types": "off",
		"@typescript-eslint/func-call-spacing": "off",
		"@typescript-eslint/indent": ["error", "tab"],
		"@typescript-eslint/keyword-spacing": "off",
		"@typescript-eslint/member-delimiter-style": [
			"error",
			{
				"multiline": {
					"delimiter": "semi",
					"requireLast": true
				},
				"singleline": {
					"delimiter": "semi",
					"requireLast": false
				}
			}
		],
		"@typescript-eslint/member-ordering": "error",
		"@typescript-eslint/naming-convention": "error",
		"@typescript-eslint/no-array-constructor": "error",
		"@typescript-eslint/no-empty-function": "off",
		"@typescript-eslint/no-empty-interface": "error",
		"@typescript-eslint/no-explicit-any": "off",
		"@typescript-eslint/no-extra-non-null-assertion": "error",
		"@typescript-eslint/no-extra-parens": "off",
		"@typescript-eslint/no-extra-semi": "off",
		"@typescript-eslint/no-inferrable-types": [
			"error",
			{
				"ignoreParameters": true
			}
		],
		"@typescript-eslint/no-misused-new": "error",
		"@typescript-eslint/no-namespace": "error",
		"@typescript-eslint/no-non-null-asserted-optional-chain": "error",
		"@typescript-eslint/no-non-null-assertion": "error",
		"@typescript-eslint/no-parameter-properties": "off",
		"@typescript-eslint/no-this-alias": "error",
		"@typescript-eslint/no-unused-expressions": "error",
		"@typescript-eslint/no-unused-vars": "warn",
		"@typescript-eslint/no-use-before-define": "off",
		"@typescript-eslint/no-var-requires": "off",
		"@typescript-eslint/prefer-as-const": "error",
		"@typescript-eslint/prefer-for-of": "error",
		"@typescript-eslint/prefer-function-type": "error",
		"@typescript-eslint/prefer-namespace-keyword": "error",
		"@typescript-eslint/quotes": ["error", "single"],
		"@typescript-eslint/semi": ["error", "always"],
		"@typescript-eslint/space-before-function-paren": "off",
		"@typescript-eslint/space-infix-ops": "off",
		"@typescript-eslint/triple-slash-reference": [
			"error",
			{
				"lib": "always",
				"path": "always",
				"types": "prefer-import"
			}
		],
		"@typescript-eslint/tslint/config": [
			"error",
			{
				"rules": {
					"import-spacing": true,
					"typedef": [true, "call-signature"],
					"whitespace": [true, "check-branch", "check-decl", "check-operator", "check-separator", "check-type", "check-typecast"]
				}
			}
		],
		"@typescript-eslint/type-annotation-spacing": "error",
		"@typescript-eslint/unified-signatures": "error",
		"array-bracket-newline": "off",
		"array-bracket-spacing": "off",
		"array-element-newline": "off",
		"arrow-body-style": "error",
		"arrow-parens": ["off", "always"],
		"arrow-spacing": "off",
		"block-spacing": "off",
		"brace-style": ["off", "off"],
		"comma-dangle": "off",
		"comma-spacing": "off",
		"comma-style": "off",
		"complexity": "off",
		"computed-property-spacing": "off",
		"constructor-super": "error",
		"curly": "error",
		"dot-location": "off",
		"eol-last": "error",
		"eqeqeq": ["error", "smart"],
		"for-direction": "error",
		"func-call-spacing": "off",
		"function-call-argument-newline": "off",
		"function-paren-newline": "off",
		"generator-star": "off",
		"generator-star-spacing": "off",
		"getter-return": "error",
		"guard-for-in": "error",
		"id-blacklist": ["error", "any", "Number", "number", "String", "string", "Boolean", "boolean", "Undefined", "undefined"],
		"id-match": "error",
		"implicit-arrow-linebreak": "off",
		"import/no-cycle": [
			"error",
			{
				"maxDepth": 100
			}
		],
		"import/no-deprecated": "warn",
		"indent": "off",
		"indent-legacy": "off",
		"jsdoc/check-alignment": "error",
		"jsdoc/check-indentation": "error",
		"jsdoc/newline-after-description": "error",
		"jsdoc/no-types": "error",
		"jsx-quotes": "off",
		"key-spacing": "off",
		"keyword-spacing": "off",
		"linebreak-style": "off",
		"lines-around-comment": "off",
		"max-classes-per-file": "off",
		"max-len": [
			"error",
			{
				"code": 140
			}
		],
		"multiline-ternary": "off",
		"new-parens": "off",
		"newline-per-chained-call": "off",
		"no-array-constructor": "off",
		"no-arrow-condition": "off",
		"no-async-promise-executor": "error",
		"no-bitwise": "error",
		"no-caller": "error",
		"no-case-declarations": "error",
		"no-class-assign": "error",
		"no-comma-dangle": "off",
		"no-compare-neg-zero": "error",
		"no-cond-assign": "error",
		"no-confusing-arrow": "off",
		"no-console": [
			"error",
			{
				"allow": [
					"log",
					"warn",
					"dir",
					"timeLog",
					"assert",
					"clear",
					"count",
					"countReset",
					"group",
					"groupEnd",
					"table",
					"dirxml",
					"error",
					"groupCollapsed",
					"Console",
					"profile",
					"profileEnd",
					"timeStamp",
					"context"
				]
			}
		],
		"no-const-assign": "error",
		"no-constant-condition": "error",
		"no-control-regex": "error",
		"no-debugger": "error",
		"no-delete-var": "error",
		"no-dupe-args": "error",
		"no-dupe-class-members": "error",
		"no-dupe-else-if": "error",
		"no-dupe-keys": "error",
		"no-duplicate-case": "error",
		"no-empty": "off",
		"no-empty-character-class": "error",
		"no-empty-function": "off",
		"no-empty-pattern": "error",
		"no-eval": "error",
		"no-ex-assign": "error",
		"no-extra-boolean-cast": "error",
		"no-extra-parens": "off",
		"no-extra-semi": "off",
		"no-fallthrough": "error",
		"no-floating-decimal": "off",
		"no-func-assign": "error",
		"no-global-assign": "error",
		"no-import-assign": "error",
		"no-inner-declarations": "error",
		"no-invalid-regexp": "error",
		"no-invalid-this": "off",
		"no-irregular-whitespace": "off",
		"no-misleading-character-class": "error",
		"no-mixed-operators": "off",
		"no-mixed-spaces-and-tabs": "off",
		"no-multi-spaces": "off",
		"no-multiple-empty-lines": "off",
		"no-new-symbol": "error",
		"no-new-wrappers": "error",
		"no-obj-calls": "error",
		"no-octal": "error",
		"no-prototype-builtins": "error",
		"no-redeclare": "error",
		"no-regex-spaces": "error",
		"no-reserved-keys": "off",
		"no-restricted-imports": ["error", "rxjs/Rx"],
		"no-self-assign": "error",
		"no-setter-return": "error",
		"no-shadow": [
			"error",
			{
				"hoist": "all"
			}
		],
		"no-shadow-restricted-names": "error",
		"no-space-before-semi": "off",
		"no-spaced-func": "off",
		"no-sparse-arrays": "error",
		"no-tabs": "off",
		"no-this-before-super": "error",
		"no-throw-literal": "error",
		"no-trailing-spaces": "off",
		"no-undef": "error",
		"no-undef-init": "error",
		"no-underscore-dangle": "error",
		"no-unexpected-multiline": "off",
		"no-unreachable": "error",
		"no-unsafe-finally": "error",
		"no-unsafe-negation": "error",
		"no-unused-labels": "error",
		"no-unused-vars": "off",
		"no-useless-catch": "error",
		"no-useless-escape": "error",
		"no-var": "error",
		"no-whitespace-before-property": "off",
		"no-with": "error",
		"no-wrap-func": "off",
		"nonblock-statement-body-position": "off",
		"object-curly-newline": "off",
		"object-curly-spacing": "off",
		"object-property-newline": "off",
		"object-shorthand": "error",
		"one-var": ["error", "never"],
		"one-var-declaration-per-line": "off",
		"operator-linebreak": "off",
		"padded-blocks": "off",
		"prefer-arrow/prefer-arrow-functions": "error",
		"prefer-const": "error",
		"quote-props": ["error", "as-needed"],
		"quotes": "off",
		"radix": "error",
		"require-yield": "error",
		"rest-spread-spacing": "off",
		"scss/dollar-variable-pattern": "off",
		"scss/selector-no-redundant-nesting-selector": "off",
		"security/detect-buffer-noassert": "warn",
		"security/detect-child-process": "warn",
		"security/detect-disable-mustache-escape": "warn",
		"security/detect-eval-with-expression": "warn",
		"security/detect-new-buffer": "warn",
		"security/detect-no-csrf-before-method-override": "warn",
		"security/detect-non-literal-fs-filename": "warn",
		"security/detect-non-literal-regexp": "warn",
		"security/detect-non-literal-require": "warn",
		"security/detect-object-injection": "warn",
		"security/detect-possible-timing-attacks": "warn",
		"security/detect-pseudoRandomBytes": "warn",
		"security/detect-unsafe-regex": "warn",
		"semi": "off",
		"semi-spacing": "off",
		"semi-style": "off",
		"sonarjs/cognitive-complexity": "error",
		"sonarjs/max-switch-cases": "error",
		"sonarjs/no-all-duplicated-branches": "error",
		"sonarjs/no-collapsible-if": "error",
		"sonarjs/no-collection-size-mischeck": "error",
		"sonarjs/no-duplicate-string": "error",
		"sonarjs/no-duplicated-branches": "error",
		"sonarjs/no-element-overwrite": "error",
		"sonarjs/no-extra-arguments": "error",
		"sonarjs/no-identical-conditions": "error",
		"sonarjs/no-identical-expressions": "error",
		"sonarjs/no-identical-functions": "error",
		"sonarjs/no-inverted-boolean-check": "error",
		"sonarjs/no-one-iteration-loop": "error",
		"sonarjs/no-redundant-boolean": "error",
		"sonarjs/no-redundant-jump": "error",
		"sonarjs/no-same-line-conditional": "error",
		"sonarjs/no-small-switch": "error",
		"sonarjs/no-unused-collection": "error",
		"sonarjs/no-use-of-empty-return-value": "error",
		"sonarjs/no-useless-catch": "error",
		"sonarjs/prefer-immediate-return": "error",
		"sonarjs/prefer-object-literal": "error",
		"sonarjs/prefer-single-boolean-return": "error",
		"sonarjs/prefer-while": "error",
		"space-after-function-name": "off",
		"space-after-keywords": "off",
		"space-before-blocks": "off",
		"space-before-function-paren": [
			"error",
			{
				"anonymous": "never",
				"asyncArrow": "always",
				"named": "never"
			}
		],
		"space-before-function-parentheses": "off",
		"space-before-keywords": "off",
		"space-in-brackets": "off",
		"space-in-parens": ["off", "never"],
		"space-infix-ops": "off",
		"space-return-throw-case": "off",
		"space-unary-ops": "off",
		"space-unary-word-ops": "off",
		"spaced-comment": [
			"error",
			"always",
			{
				"markers": ["/"]
			}
		],
		"switch-colon-spacing": "off",
		"template-curly-spacing": "off",
		"template-tag-spacing": "off",
		"unicode-bom": "off",
		"use-isnan": "error",
		"valid-typeof": "off",
		"wrap-iife": "off",
		"wrap-regex": "off",
		"yield-star-spacing": "off"
	}
}
